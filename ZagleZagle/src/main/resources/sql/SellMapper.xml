<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SellMapper">
 	
 	
	<resultMap id="sellSelectMap" type="sell">
		<result property="sellNo" 							column="sell_no" 					jdbcType="VARCHAR"/>
		<result property="seller.userNo"					column="user_no" 					jdbcType="VARCHAR" />
		<result property="seller.profile"					column="profile" 						jdbcType="VARCHAR" />
		<result property="seller.userNickname"		column="user_nickname" 			jdbcType="VARCHAR" />
		<result property="sellName" 						column="sell_name" 				jdbcType="VARCHAR" />
		<result property="sellPrice" 							column="sell_price" 					jdbcType="NUMERIC" />
		<result property="sellText" 							column="sell_text" 					jdbcType="VARCHAR" />
		<result property="sellPhoto1" 						column="sell_Photo1" 				jdbcType="VARCHAR" />
		<result property="sellPhoto2" 						column="sell_Photo2" 				jdbcType="VARCHAR" />
		<result property="sellPhoto3" 						column="sell_Photo3" 				jdbcType="VARCHAR" />
		<result property="sellPhone" 						column="sell_phone" 				jdbcType="VARCHAR" />
		<result property="sellStyle" 							column="sell_style" 					jdbcType="NUMERIC"  />
		<result property="sellState" 							column="sell_state" 				jdbcType="NUMERIC" />
		<result property="sellDate" 							column="sell_date" 					jdbcType="DATE" />
	</resultMap>
	
	<insert 	id="addSell"	parameterType="sell" >
	 	INSERT
		INTO sell(sell_no, user_no, sell_name, sell_price, sell_text, sell_photo1, sell_photo2, sell_photo3, sell_phone, sell_style, sell_state, sell_date)
		VALUES	 ( 'TS'||seq_ts.nextval,#{seller.userNo},#{sellName},#{sellPrice},#{sellText},#{sellPhoto1:VARCHAR},#{sellPhoto2:VARCHAR},#{sellPhoto3:VARCHAR},#{sellPhone:VARCHAR},#{sellStyle},10,sysdate)
	 </insert>

	<select id="listTrade" parameterType="Search" resultMap="sellSelectMap">
		SELECT DISTINCT u.user_no, u.profile, u.user_nickname, s.* FROM sell s, users u WHERE u.user_no=s.user_no ORDER BY s.sell_no desc
	</select>
	
	<select id="getSell" parameterType="string" resultMap="sellSelectMap">
		SELECT DISTINCT u.user_no, u.profile, u.user_nickname, s.* FROM sell s, users u WHERE u.user_no=s.user_no and sell_no=#{sellNo}
	</select>
	 
	 <select id="listSell" parameterType="Map" resultMap="sellSelectMap">
		SELECT * 
		FROM 
		(SELECT inner_table.*, ROWNUM as row_seq FROM
		(SELECT * FROM sell WHERE user_no=#{userNo} ORDER BY sell_no desc) inner_table
		WHERE ROWNUM &lt;=#{search.endRowNum:INTEGER})
		WHERE row_seq BETWEEN #{search.startRowNum:INTEGER} AND #{search.endRowNum:INTEGER}
	 </select>
	 
	 <select id="getSellCount" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT * FROM sell WHERE user_no=#{userNo} ORDER BY sell_no) countTable
	 </select>
	 
	 <update id="updateSell" parameterType="sell">
		 UPDATE sell
			<set>
				sell_name=#{sellName},
				sell_price=#{sellPrice},
				sell_text=#{sellText},
				sell_photo1=#{sellPhoto1:VARCHAR},
				sell_photo2=#{sellPhoto2:VARCHAR},
				sell_photo3=#{sellPhoto3:VARCHAR},
				sell_style=#{sellStyle},
				sell_phone=#{sellPhone}
			</set>
			WHERE sell_no=#{sellNo}
	 </update>
	 
	 <update id="updateSellState" parameterType="sell">
	 	UPDATE sell
	 	<set>
	 		sell_state=#{sellState}
	 	</set>
	 	WHERE sell_no=#{sellNo}
	 </update>
	 
</mapper>