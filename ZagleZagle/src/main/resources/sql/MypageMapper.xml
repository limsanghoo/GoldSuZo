<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MypageMapper">
 	
 	
	<resultMap id="mypageSelectMap" type="com.zagle.service.domain.Mypage">
		<result property="user.account" 			column="account" 			jdbcType="VARCHAR"/>
		<result property="user.userName"	column="user_name" 		jdbcType="VARCHAR" />
		<result property="user.userNo" 		column="user_no"				jdbcType="VARCHAR"/>
		<result property="comment.commentNo" column="comment_no"		jdbcType="VARCHAR"/>
		<result property="comment.commentRegDate"	column="comment_reg_date"	jdbcType="VARCHAR"/>
		<result property="board.boardNo" column="board_no" jdbcType="VARCHAR"/>
		<result property="comment.commentDetailText"	column="comment_detail_text" jdbcType="VARCHAR"/>
		<result property="like.likeNo"		column="like_no"	jdbcType="VARCHAR"/>
		<result property="board.checkLike"	column="check_like"	jdbcType="VARCHAR"/>
		<result property="scrap.scrapNo"	column="scrap_no"	jdbcType="VARCHAR" />
		<result property="scrap.checkScrap"	column="check_scrap"	jdbcType="VARCHAR" />
		<result	property="board.likeUserNo"	column="like_user_no"	jdbcType="VARCHAR"/>
		<result	property="board.boardDetailText"	column="detail_text"	jdbcType="VARCHAR"/>
		</resultMap>
	
	
	
	
	<!-- SQL : INSERT -->
	<update 	id="addAccount"		parameterType="user" >
	 	UPDATE users
	 	<set>
	 	account = #{account:VARCHAR} ,
	 	bank_name = #{bankName:VARCHAR}
	 	</set>
	 	WHERE sns_no =#{snsNo}
	
	</update>
	
	<update 	id="updateAccount"		parameterType="user" >
	 	UPDATE users
	 	<set>
	 	account = #{account:VARCHAR} ,
	 	bank_name = #{bankName:VARCHAR}
	 	</set>
	 	WHERE user_no =#{userNo}
	
	</update>
	 
	
	 
	 <select id="listLike"	parameterType="com.zagle.service.domain.SearchMypage" resultMap="mypageSelectMap">
	 SELECT*
	 FROM(SELECT inner_table.*, ROWNUM AS row_seq
	 FROM ( SELECT*
	 FROM likes
	 WHERE user_no = #{myUser.userNo:VARCHAR} and check_like = 1
	 ORDER BY like_no )inner_table
	 	WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	  <select id="commentList"	parameterType="com.zagle.service.domain.SearchMypage" resultMap="mypageSelectMap">
	SELECT*
	FROM (SELECT inner_table.*, ROWNUM AS row_seq 
	FROM (	SELECT distinct u.user_no, c.comment_no, c.comment_detail_text, c.comment_reg_date, c.board_no
	FROM users u, comments c
	 WHERE u.user_no = c.user_no and u.user_no = #{myUser.userNo:VARCHAR}
	 ORDER BY c.comment_reg_date DESC )inner_table
	 	WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 
	</select>
	 
	 <select id="listScrap" parameterType="com.zagle.service.domain.SearchMypage" resultMap="mypageSelectMap">
	 SELECT *
	 FROM ( SELECT inner_table.*, ROWNUM AS row_seq
					 FROM ( SELECT *
	 				FROM scrap
				 WHERE user_no = #{myUser.userNo:VARCHAR} and check_scrap = 1
		
	
				 
	 			ORDER BY scrap_no )inner_table
	 				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 <select id="listMyBoard" parameterType="com.zagle.service.domain.SearchMypage" resultMap="mypageSelectMap">
		 SELECT *
	 FROM ( SELECT inner_table.*, ROWNUM AS row_seq
		 FROM ( SELECT u.user_no, b.board_no, b.board_detail_text as "detail_text", b.board_reg_date as "reg_date" ,l.check_like,l.user_no as "like_user_no"
		FROM users u, board b,likes l
		WHERE u.user_no=b.user_no and u.user_no = #{myUser.userNo} and b.board_status=1 AND b.board_no=l.board_no(+) 
		AND l.user_no(+)=#{myUser.userNo} AND u.user_no(+)=#{myUser.userNo}
		ORDER BY b.board_reg_date DESC )inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>

	 
	 
	 <!-- 
	 <select id="getTotalCount" parameterType="com.zagle.service.domain.SearchMypage" resultMap="mypageSelectMap">
	 SELECT COUNT(*)
	 FROM ( SELECT u.user_no, c.comment_no, c.comment_detail_text, c.comment_reg_date, c.board_no
	 FROM users u, comments c
	  WHERE u.user_no = c.user_no and u.user_no = #{myUser.userNo:VARCHAR} 
	    ) countTable
	    </select>
	 - -->
	 
	 <select id="getTotalLikeList" parameterType="com.zagle.service.domain.SearchMypage" resultType="int">
	 SELECT COUNT(*)
	 FROM ( SELECT*
	 FROM likes
	 WHERE user_no = #{myUser.userNo:VARCHAR} and check_like = 1
	 ORDER BY like_no ) countTable
	 

	 </select>
	 
	 
	 <select id="getTotalCommentList" parameterType="com.zagle.service.domain.SearchMypage" resultType="int">
	  SELECT COUNT(*)
	  FROM (     SELECT distinct u.user_no, c.comment_no, c.comment_detail_text, c.comment_reg_date, c.board_no
	FROM users u, comments c
	 WHERE u.user_no = c.user_no and u.user_no = #{myUser.userNo:VARCHAR}
	 ORDER BY c.comment_reg_date DESC ) countTable 
	 
	 
	 </select>
	 
	 <select id="getTotalBoardList" parameterType="com.zagle.service.domain.SearchMypage" resultType="int">
	 SELECT COUNT(*)
	 FROM (SELECT u.user_no, b.board_no, b.board_detail_text,  b.board_reg_date
		FROM users u, board b
		WHERE u.user_no=b.user_no and u.user_no = #{myUser.userNo} and b.board_status=1
		ORDER BY b.board_reg_date DESC ) countTable
	
	 </select>
	 
	 
	 <select id="getTotalScrapList" parameterType="com.zagle.service.domain.SearchMypage" resultType="int">
	 SELECT COUNT(*)
	 FROM(  SELECT *
	 FROM scrap
	 WHERE user_no = #{myUser.userNo:VARCHAR} and check_scrap = 1
	 
	 
	 ORDER BY scrap_no) countTable
	 </select>
	
	<select id="checkLike" parameterType="map" resultType="com.zagle.service.domain.Like">
		 SELECT * 
		 FROM likes 
		 WHERE user_No = #{userNo}
		 AND board_No = #{boardNo}
	 </select>
	 
	 <select id="likeCount" parameterType="String" resultType="int">
		 SELECT count(*)
		 FROM likes 
		 WHERE board_No = #{boardNo}
	 </select>
	 
	 	 <select id="getCoord" parameterType="String" resultType="String">
		 SELECT coord
		 FROM board
		 WHERE board_No = #{boardNo}
	 </select>
	 
	 
</mapper>